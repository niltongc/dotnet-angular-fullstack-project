{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/transaction.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UpdateDateValueTransactionComponent_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\", 0, 12);\n    i0.ɵɵlistener(\"ngSubmit\", function UpdateDateValueTransactionComponent_ng_container_18_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSubmit());\n    });\n    i0.ɵɵelementStart(3, \"div\", 13)(4, \"div\", 9)(5, \"label\", 14);\n    i0.ɵɵtext(6, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 9)(9, \"label\", 16);\n    i0.ɵɵtext(10, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdateDateValueTransactionComponent_ng_container_18_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.extract.Datetime = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 9)(13, \"label\", 18);\n    i0.ɵɵtext(14, \"Value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdateDateValueTransactionComponent_ng_container_18_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.extract.value = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 9)(17, \"button\", 20);\n    i0.ɵɵtext(18, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function UpdateDateValueTransactionComponent_ng_container_18_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onDelete());\n    });\n    i0.ɵɵtext(20, \" Cancel \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r1.extract.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.extract.Datetime);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.extract.value);\n  }\n}\nfunction UpdateDateValueTransactionComponent_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \" Extract not found! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UpdateDateValueTransactionComponent {\n  constructor(transactionService, router, route) {\n    this.transactionService = transactionService;\n    this.router = router;\n    this.route = route;\n    this.id = null;\n  }\n  onInit() {\n    this.paramsSubscription = this.route.paramMap.subscribe({\n      next: params => {\n        this.id = params.get('id');\n        if (this.id) {\n          this.transactionService.getTransactionById(this.id).subscribe({\n            next: response => {\n              this.extract = response;\n            }\n          });\n        }\n      }\n    });\n  }\n  onSubmit() {\n    const updateTransaction = {\n      value: this.extract?.value ?? 0,\n      dateTime: this.extract?.dateTime ?? new Date()\n    };\n    if (this.id) {\n      this.editExtractSubscription = this.transactionService.updateDateOfValue(this.id, updateTransaction).subscribe({\n        next: response => {\n          this.router.navigateByUrl('transaction');\n        }\n      });\n    }\n  }\n}\nUpdateDateValueTransactionComponent.ɵfac = function UpdateDateValueTransactionComponent_Factory(t) {\n  return new (t || UpdateDateValueTransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUpdateDateValueTransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateDateValueTransactionComponent,\n  selectors: [[\"app-update-date-value-transaction\"]],\n  decls: 21,\n  vars: 4,\n  consts: [[3, \"ngSubmit\"], [\"extractForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"value\"], [\"type\", \"number\", \"id\", \"value\", \"name\", \"value\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"container\"], [1, \"mt-3\"], [4, \"ngIf\", \"ngIfElse\"], [\"notFound\", \"\"], [\"form\", \"ngForm\"], [1, \"mt-2\"], [\"for\", \"description\", 1, \"form-label\"], [\"type\", \"text\", \"disabled\", \"\", \"id\", \"description\", \"name\", \"description\", 1, \"form-control\", 3, \"value\"], [\"for\", \"date\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"date\", \"name\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"value\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"value\", \"name\", \"value\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\"], [\"type\", \"Cancel\", 1, \"btn\", \"btn-danger\", \"ms-3\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"]],\n  template: function UpdateDateValueTransactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Update Extract\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateDateValueTransactionComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateDateValueTransactionComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.extract.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Value:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateDateValueTransactionComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.extract.value = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"h1\", 9);\n      i0.ɵɵtext(17, \"Edit Extract\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, UpdateDateValueTransactionComponent_ng_container_18_Template, 21, 3, \"ng-container\", 10);\n      i0.ɵɵtemplate(19, UpdateDateValueTransactionComponent_ng_template_19_Template, 2, 0, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(20);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.extract.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.extract.value);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.extract)(\"ngIfElse\", _r2);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","UpdateDateValueTransactionComponent","constructor","transactionService","router","route","onInit","paramsSubscription","paramMap","subscribe","next","params","id","get","getTransactionById","response","extract","onSubmit","updateTransaction","value","dateTime","Date","editExtractSubscription","updateDateOfValue","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\xjuni\\Documents\\proc\\DesenvolvedorFullStack\\Extrato\\Extrato\\ClientApp\\src\\app\\transaction\\update-date-value-transaction\\update-date-value-transaction.component.html","C:\\Users\\xjuni\\Documents\\proc\\DesenvolvedorFullStack\\Extrato\\Extrato\\ClientApp\\src\\app\\transaction\\update-date-value-transaction\\update-date-value-transaction.component.ts"],"sourcesContent":["<div>\r\n  <h2>Update Extract</h2>\r\n  <form (ngSubmit)=\"onSubmit()\" #extractForm=\"ngForm\">\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"description\">Description:</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"description\" name=\"description\" [(ngModel)]=\"extract.description\" required>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"value\">Value:</label>\r\n      <input type=\"number\" class=\"form-control\" id=\"value\" name=\"value\" [(ngModel)]=\"extract.value\" required>\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n\r\n\r\n<div class=\"container\">\r\n  <h1 class=\"mt-3\">Edit Extract</h1>\r\n\r\n  <ng-container *ngIf=\"extract;else notFound\">\r\n    <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"mt-2\">\r\n        <div class=\"mt-3\">\r\n\r\n          <label class=\"form-label\" for=\"description\">Description</label>\r\n          <input type=\"text\" disabled\r\n                 id=\"description\"\r\n                 class=\"form-control\"\r\n                 name=\"description\"\r\n                 value=\"{{extract.description}}\">\r\n        </div>\r\n\r\n        <div class=\"mt-3\">\r\n          <label class=\"form-label\" for=\"date\">Date</label>\r\n          <input type=\"date\"\r\n                 id=\"date\"\r\n                 class=\"form-control\"\r\n                 name=\"date\"\r\n                 [(ngModel)]=\"extract.Datetime\">\r\n        </div>\r\n\r\n        <div class=\"mt-3\">\r\n          <label class=\"form-label\" for=\"value\">Value</label>\r\n          <input type=\"number\"\r\n                 id=\"value\"\r\n                 class=\"form-control\"\r\n                 name=\"value\"\r\n                 [(ngModel)]=\"extract.value\">\r\n        </div>\r\n\r\n        <div class=\"mt-3\">\r\n          <button class=\"btn btn-primary\">Save</button>\r\n\r\n          <button type=\"Cancel\" class=\"btn btn-danger ms-3\"\r\n                  (click)=\"onDelete()\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </ng-container>\r\n\r\n  <ng-template #notFound>\r\n    <div class=\"alert alert-warning\" role=\"alert\">\r\n      Extract not found!\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { UpdateValueOrDate } from '../../models/update-value-date-extract.model';\r\nimport { Extract } from '../../models/extract.model';\r\nimport { TransactionService } from '../../services/transaction.service';\r\n\n@Component({\n  selector: 'app-update-date-value-transaction',\n  templateUrl: './update-date-value-transaction.component.html',\n  styleUrls: ['./update-date-value-transaction.component.css']\n})\nexport class UpdateDateValueTransactionComponent {\n\n  id: string | null = null;\r\n  paramsSubscription?: Subscription;\r\n  editExtractSubscription?: Subscription;\r\n  extract?: Extract;\n  constructor(private transactionService: TransactionService, private router: Router, private route: ActivatedRoute) {\n\r\n  }\n  onInit(): void {\n    this.paramsSubscription = this.route.paramMap.subscribe({\r\n      next: (params) => {\r\n        this.id = params.get('id');\r\n\r\n        if (this.id) {\r\n          this.transactionService.getTransactionById(this.id)\r\n            .subscribe({\r\n              next: (response) => {\r\n                this.extract = response;\r\n              }\r\n            })\r\n        }\r\n      }\r\n    })\r\n  }\n\n  onSubmit() {\n    const updateTransaction: UpdateValueOrDate = {\r\n      value: this.extract?.value ?? 0,\r\n      dateTime: this.extract?.dateTime ?? new Date()\r\n    };\r\n\r\n    if (this.id) {\r\n      this.editExtractSubscription = this.transactionService.updateDateOfValue(this.id, updateTransaction)\r\n        .subscribe({\r\n          next: (response) => {\r\n            this.router.navigateByUrl('transaction')\r\n          }\r\n        });\r\n    }\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}