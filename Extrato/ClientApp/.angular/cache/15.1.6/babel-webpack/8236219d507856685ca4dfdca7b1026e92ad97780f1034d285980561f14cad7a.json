{"ast":null,"code":"import { environment } from '../../environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TransactionService {\n  constructor(http) {\n    this.http = http;\n  }\n  //url = \"https://localhost:7061/api/Extract\";\n  //https://localhost:7061/api/Extract?startDate=2023-10-24&endDate=2023-10-29\n  //Post https://localhost:7061/api/Extract\n  //put https://localhost:7061/api/Extract/bb737ece-8352-4ad4-9620-08dbd7f0013f date value\n  //put cancel https://localhost:7061/api/Extract/cancel-transaction/bb737ece-8352-4ad4-9620-08dbd7f0013f\n  //sum https://localhost:7061/api/Extract/sum-transaction\n  //automatic https://localhost:7061/api/Extract/not-adhoc\n  getTransactionsDefault() {\n    return this.http.get(`${environment.apiBaseUrl}/api/Extract`);\n  }\n  getTransactionsByDate(startDate, endDate) {\n    return this.http.get(`${environment.apiBaseUrl}/api/Extract?startDate=${startDate}&endDate=${endDate}`);\n  }\n  addTransaction(model) {\n    return this.http.post(`${environment.apiBaseUrl}/api/Extract`, model);\n  }\n  sumValidTransaction() {\n    return this.http.get(`${environment.apiBaseUrl}/api/Extract/sum-transaction`);\n  }\n  getTransactionById(id) {\n    return this.http.get(`${environment.apiBaseUrl}/api/Extract/${id}`);\n  }\n  updateDateOfValue(id, updateValeuOrDate) {\n    console.log(`in service: ${updateValeuOrDate.dateTime}`);\n    return this.http.put(`${environment.apiBaseUrl}/api/Extract/${id}`, updateValeuOrDate);\n  }\n  cancelTransaction(id, status) {\n    return this.http.put(`${environment.apiBaseUrl}/api/Extract/cancel-transaction/${id}`, status);\n  }\n}\nTransactionService.ɵfac = function TransactionService_Factory(t) {\n  return new (t || TransactionService)(i0.ɵɵinject(i1.HttpClient));\n};\nTransactionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TransactionService,\n  factory: TransactionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,qCAAqC;;;AAQjE,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;EAAiB;EAEzC;EACA;EAEA;EACE;EACA;EACA;EACA;EAEFC,sBAAsB;IACpB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,GAAGL,WAAW,CAACM,UAAU,cAAc,CAAC;EAC1E;EACAC,qBAAqB,CAACC,SAAe,EAAEC,OAAa;IAClD,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAY,GAAGL,WAAW,CAACM,UAAU,0BAA0BE,SAAS,YAAYC,OAAO,EAAE,CAAC;EACpH;EAEAC,cAAc,CAACC,KAAsB;IACnC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAO,GAAGZ,WAAW,CAACM,UAAU,cAAc,EAAEK,KAAK,CAAC;EAC7E;EAEAE,mBAAmB;IACjB,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAS,GAAGL,WAAW,CAACM,UAAU,8BAA8B,CAAC;EACvF;EAEAQ,kBAAkB,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAU,GAAGL,WAAW,CAACM,UAAU,gBAAgBS,EAAE,EAAE,CAAC;EAC9E;EAEAC,iBAAiB,CAACD,EAAU,EAAEE,iBAAoC;IAChEC,OAAO,CAACC,GAAG,CAAC,eAAeF,iBAAiB,CAACG,QAAQ,EAAE,CAAC;IACxD,OAAO,IAAI,CAACjB,IAAI,CAACkB,GAAG,CAAU,GAAGrB,WAAW,CAACM,UAAU,gBAAgBS,EAAE,EAAE,EAAEE,iBAAiB,CAAC;EACjG;EAEAK,iBAAiB,CAACP,EAAU,EAAEQ,MAAc;IAC1C,OAAO,IAAI,CAACpB,IAAI,CAACkB,GAAG,CAAU,GAAGrB,WAAW,CAACM,UAAU,mCAAmCS,EAAE,EAAE,EAAEQ,MAAM,CAAC;EACzG;;AAvCWtB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAuB,SAAlBvB,kBAAkB;EAAAwB,YAFjB;AAAM","names":["environment","TransactionService","constructor","http","getTransactionsDefault","get","apiBaseUrl","getTransactionsByDate","startDate","endDate","addTransaction","model","post","sumValidTransaction","getTransactionById","id","updateDateOfValue","updateValeuOrDate","console","log","dateTime","put","cancelTransaction","status","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\xjuni\\Documents\\proc\\DesenvolvedorFullStack\\Extrato\\Extrato\\ClientApp\\src\\app\\services\\transaction.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment.prod';\r\nimport { AddExtractModel } from '../models/add-extract.model';\r\nimport { Extract } from '../models/extract.model';\r\nimport { UpdateValueOrDate } from '../models/update-value-date-extract.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransactionService {\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  //url = \"https://localhost:7061/api/Extract\";\r\n  //https://localhost:7061/api/Extract?startDate=2023-10-24&endDate=2023-10-29\r\n\r\n  //Post https://localhost:7061/api/Extract\r\n    //put https://localhost:7061/api/Extract/bb737ece-8352-4ad4-9620-08dbd7f0013f date value\r\n    //put cancel https://localhost:7061/api/Extract/cancel-transaction/bb737ece-8352-4ad4-9620-08dbd7f0013f\r\n    //sum https://localhost:7061/api/Extract/sum-transaction\r\n    //automatic https://localhost:7061/api/Extract/not-adhoc\r\n\r\n  getTransactionsDefault(): Observable<Extract[]> {\r\n    return this.http.get<Extract[]>(`${environment.apiBaseUrl}/api/Extract`);\r\n  }\r\n  getTransactionsByDate(startDate: Date, endDate: Date): Observable<Extract[]> {\r\n    return this.http.get<Extract[]>(`${environment.apiBaseUrl}/api/Extract?startDate=${startDate}&endDate=${endDate}`);\r\n  }\r\n\r\n  addTransaction(model: AddExtractModel): Observable<void> {\r\n    return this.http.post<void>(`${environment.apiBaseUrl}/api/Extract`, model);\r\n  }\r\n\r\n  sumValidTransaction(): Observable<number> {\r\n    return this.http.get<number>(`${environment.apiBaseUrl}/api/Extract/sum-transaction`);\r\n  }\r\n\r\n  getTransactionById(id: string): Observable<Extract> {\r\n    return this.http.get<Extract>(`${environment.apiBaseUrl}/api/Extract/${id}`)\r\n  }\r\n\r\n  updateDateOfValue(id: string, updateValeuOrDate: UpdateValueOrDate): Observable<Extract> {\r\n    console.log(`in service: ${updateValeuOrDate.dateTime}`)\r\n    return this.http.put<Extract>(`${environment.apiBaseUrl}/api/Extract/${id}`, updateValeuOrDate);\r\n  }\r\n\r\n  cancelTransaction(id: string, status: number): Observable<Extract> {\r\n    return this.http.put<Extract>(`${environment.apiBaseUrl}/api/Extract/cancel-transaction/${id}`, status)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}